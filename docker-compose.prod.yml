services:
  thoughtless-api:
    container_name: thoughtless-api
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: thoughtless-php
    volumes:
      - ./.env:/var/www/html/.env          # bind mount .env file
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - thoughtless
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - ./public:/var/www/html/public:ro
    networks:
      - thoughtless
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.grozdan.app`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.backend-http.rule=Host(`api.grozdan.app`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=redirect-https"

  pgsql:
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - thoughtless
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks:
      - thoughtless
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  queue:
    image: thoughtless-php
    volumes:
      - ./.env:/var/www/html/.env          # bind mount .env for artisan too
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - thoughtless
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: php artisan queue:work --verbose --tries=3 --timeout=90

networks:
  thoughtless:
    external: true
  traefik_proxy:
    external: true

volumes:
  pgdata:
  redisdata:
