version: "3.9"

services:
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
    volumes:
      - .:/var/www/html
    networks:
      - thoughtless
    depends_on:
      - pgsql
      - redis

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - .:/var/www/html:ro
    networks:
      - thoughtless
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.example.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.services.api.loadbalancer.server.port=80"

  queue:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    command: sh -lc "php artisan queue:work --verbose --tries=3 --timeout=90"
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
    volumes:
      - .:/var/www/html
    networks:
      - thoughtless
    depends_on:
      - php
      - redis

  scheduler:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    command: sh -lc "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      TZ: Europe/Belgrade
    volumes:
      - .:/var/www/html
    networks:
      - thoughtless
    depends_on:
      - php

  pgsql:
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - thoughtless

  redis:
    image: redis:alpine
    volumes:
      - redisdata:/data
    networks:
      - thoughtless

networks:
  thoughtless:
    external: true
  traefik_proxy:
    external: true

volumes:
  pgdata:
  redisdata:
